shiny::runApp('GitHub/who_am_i/who_am_i')
runApp('GitHub/who_am_i/who_am_i')
shiny::runApp('GitHub/who_am_i/who_am_i')
shiny::runApp('GitHub/who_am_i/who_am_i')
runApp('GitHub/who_am_i/who_am_i')
runApp('GitHub/who_am_i/who_am_i')
runApp('GitHub/who_am_i/who_am_i')
rsconnect::deployApp(
appDir = ".",
appName = "who_am_i",
account = "domdf",
server = "shinyapps.io",
forceUpdate = TRUE,
appFiles = c("app.R", "clues.txt", "archive/"),
appPrimaryDoc = "app.R",
appSourceDoc = "app.R",
contentCategory = "application",
lint = FALSE,
metadata = list(
appmode = "shiny",
r_version = "4.3.0"
)
)
rlang::last_trace()
getwd()
setwd("/Users/ddifrancesco/GitHub/who_am_i/who_am_i")
rsconnect::deployApp(
appDir = ".",
appName = "who_am_i",
account = "domdf",
server = "shinyapps.io",
forceUpdate = TRUE,
appFiles = c("app.R", "clues.txt", "archive/"),
appPrimaryDoc = "app.R",
appSourceDoc = "app.R",
contentCategory = "application",
lint = FALSE,
metadata = list(
appmode = "shiny",
r_version = "4.3.0"
)
)
rsconnect::writeManifest(
appDir = ".",
appFiles = c("app.R", "clues.txt", list.files("archive", full.names = TRUE)),
appPrimaryDoc = "app.R",
contentCategory = "application",
python = NULL,
forceGeneratePythonEnvironment = FALSE,
quarto = NA,
image = NULL,
envManagement = "conda",
envManagementR = TRUE,
envManagementPy = FALSE
)
# Then deploy
rsconnect::deployApp(lint = FALSE)
# First, clear any existing deployment records to start fresh
rsconnect::forgetDeployment(
appDir = ".",
name = "who_am_i",
account = "domdf",
server = "shinyapps.io"
)
rsconnect::forgetDeployment(
appPath = ".",
name = "who_am_i",
account = "domdf",
server = "shinyapps.io"
)
Sys.setenv(RSCONNECT_R_VERSION = "4.2.0")
rsconnect::deployApp(
appDir = ".",
appName = "who_am_i",
account = "domdf",
server = "shinyapps.io",
lint = FALSE,
forceUpdate = TRUE
)
rsconnect::deployApp(
appDir = ".",
appName = "who_am_i",
account = "domdf",
server = "shinyapps.io",
lint = FALSE,
forceUpdate = TRUE
)
# Remove version-specific files
file.remove(".rsconnect_profile")
file.remove("manifest.json")
# Deploy with explicit version override
rsconnect::deployApp(
appDir = ".",
appName = "who_am_i",
account = "domdf",
server = "shinyapps.io",
lint = FALSE,
forceUpdate = TRUE,
contentCategory = "site",
on.failure = "error"
)
rsconnect::accounts()
rsconnect::removeAccount("domdf", "shinyapps.io")
rsconnect::setAccountInfo(
name = "domdf",
token = "YOUR_TOKEN",  # You'll need to provide this
secret = "YOUR_SECRET" # You'll need to provide this
)
rlang::last_trace()
install.packages("rsconnect")
install.packages("rsconnect")
rsconnect::deployApp(
appDir = ".",
appName = "who_am_i",
account = "domdf",
server = "shinyapps.io",
upload = TRUE,
launch.browser = FALSE,
lint = FALSE,
metadata = list(
asMultiple = FALSE,
asStatic = FALSE
),
logLevel = "verbose"
)
rsconnect::deployApp(
appName = "who_am_i",
account = "domdf",
server = "shinyapps.io",
appFileManifest = "https://github.com/DomDF/who_am_i/blob/main/who_am_i/app.R",
lint = FALSE
)
rsconnect::writeManifest()
rsconnect::writeManifest(
appDir = ".",
appFiles = c("app.R", "clues.txt", list.files("archive", full.names = TRUE)),
appPrimaryDoc = "app.R",
contentCategory = "application"
)
runApp()
runApp()
runApp()
runApp()
runApp()
library(tidyverse); library(janitor); library(scales); library(kableExtra)
#| message: false
library(reticulate)
# Configure Python
use_python("/usr/bin/python3", required = TRUE)
library(JuliaCall); julia_setup()
Sys.setenv(JULIA_NUM_THREADS = "8")
library(tidyverse); library(janitor); library(scales); library(kableExtra)
#| message: false
library(reticulate)
# Configure Python
use_python("/usr/bin/python3", required = TRUE)
library(JuliaCall); julia_setup()
Sys.setenv(JULIA_NUM_THREADS = "8")
